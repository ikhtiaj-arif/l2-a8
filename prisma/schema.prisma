// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  ACTIVE
  BLOCKED
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  role      UserRole
  status    UserStatus @default(ACTIVE)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  customer Customer?

  @@map("users")
}

model Customer {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  phone     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user  User   @relation(fields: [email], references: [email])

  bikes     Bike[]
  @@map("customers")
}

model Bike {
  id            String          @id @default(uuid())
  brand         String
  model         String
  year          Int
  customerId    String
  serviceRecord ServiceRecord[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  customer Customer @relation(fields: [customerId], references: [id])

  @@map("bikes")
}

model ServiceRecord {
  id             String   @id @default(uuid())
  bikeId         String
  serviceDate    DateTime
  completionDate DateTime
  description    String
  status         String
  bike           Bike     @relation(fields: [bikeId], references: [id])

  @@map("serviceRecords")
}
